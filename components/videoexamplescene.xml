<?xml version="1.0" encoding="utf-8" ?> 

<!--********** Copyright 2016 Roku Corp.  All Rights Reserved. **********-->

<component name = "VideoExampleScene" extends = "Scene" >

  <interface>
    <field id = "selecteditem" type = "node" />
  </interface>

  <script type="text/brightscript" >

    <![CDATA[

    sub init()
      URI_API_BASE = "http://192.168.7.31:3031/api/v1/"
      m.global.addFields( {
        COOKIE_DOMAIN: "192.168.7.31",
        URI_API_BASE: URI_API_BASE,
        URI_AUTHENTICATE: URI_API_BASE + "authenticate_ro",
        URI_VALIDATE_SESS: URI_API_BASE + "validate_session_ro",
        URI_GET_VID_CONT: URI_API_BASE + "get_channel_xml_ro",
        REG_SEC: "yourchannel_sessionkey",
        REG_SEC_TOKEN_NAME: "session_key",
        sess_key: ""
        })


      m.top.backgroundURI = "pkg:/images/ChannelSplash_HD.jpg"

      m.videolist = m.top.findNode("videoLabelList")
      m.videoinfo = m.top.findNode("infoLabel")
      m.videoposter = m.top.findNode("videoPoster")
      m.video = m.top.findNode("exampleVideo")
      m.readVideoContentTask = createObject("RoSGNode","VideoContentReader")
      m.readVideoContentTask.observeField("videocontent","showvideolist")
      'm.readVideoContentTask.videocontenturi = "/get_channel_xml_ro"

      ' TODO remove?
      'm.sublist = createObject("RoSGNode", "ContentNode")

      m.video.observeField("state","controlvideoplay")
      m.videolist.observeField("itemFocused","setvideo")
      m.videolist.observeField("itemSelected","playvideo")

      m.authTask = createObject("RoSGNode", "Authenticator")
      m.authTask.observeField("sess_key", "authenticator_returned")
      m.authTask.control = "RUN" 
    end sub

    sub authenticator_returned()
        print "Authenticator returned"
        if m.authTask.sess_key = "INVALID"
            start_login()
        else
            readvideolist()
        end if
    end sub

    sub start_login()
        m.username_entry = createObject("roSGNode", "UsernameEntry")
        m.username_entry.observeField("username", "login_step2")
        m.top.dialog = m.username_entry
    end sub

    sub login_step2()
        m.password_entry = createObject("roSGNode", "PasswordEntry")
        m.password_entry.observeField("password", "login_step3")
        m.top.dialog = m.password_entry
    end sub

    sub login_step3()
        m.logger_iner = createObject("RoSGNode", "LoggerIner")
        m.logger_iner.setField("username", m.username_entry.text)
        m.logger_iner.setField("password", m.password_entry.text)
        m.logger_iner.observeField("sess_key", "logger_iner_returned")
        m.logger_iner.control = "RUN"
    end sub

    sub logger_iner_returned()
        print "Logger Iner Returned - Trying Auth Again"
        m.authTask = createObject("RoSGNode", "Authenticator")
        m.authTask.observeField("sess_key", "authenticator_returned")
        m.authTask.control = "RUN" 
    end sub

    sub readvideolist()
      m.readVideoContentTask.setField("sess_key",m.authTask.sess_key)
      m.readVideoContentTask.control = "RUN" 
    end sub

    sub showvideolist()
      m.videolist.content = m.readVideoContentTask.videocontent
      print "showvideolist ", m.videolist.content
      print "showvideolist ", m.videolist.content.getChildCount()
      m.videolist.setFocus(true)
    end sub

    sub setvideo()
      videocontent = m.videolist.content.getChild(m.videolist.itemFocused)
      print "setvideo ", videocontent
      m.videoposter.uri = videocontent.hdposterurl
      m.videoinfo.text = videocontent.description
      m.top.selecteditem = videocontent
    end sub

    sub playvideo()
      if m.top.selecteditem.contenttype = 4
        m.video.content = m.top.selecteditem
        m.video.control = "play"
        m.video.visible = true
        m.video.setFocus(true)
      else if m.top.selecteditem.contenttype = 2
        m.videolist.content = m.top.selecteditem
        m.videolist.setFocus(true)
      end if
    end sub

    sub controlvideoplay()
      if (m.video.state = "finished") 
        m.video.control = "stop"
        m.videolist.setFocus(true)
        m.video.visible = false
      end if
    end sub

    function onKeyEvent(key as String,press as Boolean) as Boolean
      if press then
        if key = "back"
          if (m.video.state = "playing")
            m.video.control = "stop"
            m.videolist.setFocus(true)
            m.video.visible = false

            return true

          else
            if m.videolist.content.getField("title") = "TippyTopAllDoneNoMoreGoHomeByeBye"
              return false
            end if
            m.videolist.content = m.videolist.content.getParent()

            return true
          end if
        end if
      end if

      return false
    end function

    ]]>

  </script>

  <children>

    <LabelList 
      id = "videoLabelList"
      itemSize = "[ 350, 60 ]"
      translation = "[ 140, 100 ]" />

    <Poster 
      id = "tvPoster"
      translation = "[ 560, 100 ]"
      width = "647"
      height = "448"
      uri = "pkg:/images/flat_scr_area.png" >

      <Poster 
        id = "videoPoster" 
        translation = "[ 53, 45 ]" 
        width = "540" 
        height = "304" />

      <Rectangle
        id = "infoRectangle"
        translation = "[ 0, 460 ]"
        width = "647"
        height = "76"
        color = "0x161616FF" >

        <Label
          id = "infoLabel"
          translation = "[ 20, 20 ]"
          width = "607"
          height = "36" 
          horizalign = "center"
          vertalign = "center"
          wrap = "true"
          font = "font:LargeBoldSystemFont" />

      </Rectangle>

    </Poster>

    <Video
      id = "exampleVideo"
      visible = "false" />

  </children>

</component>
